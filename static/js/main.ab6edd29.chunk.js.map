{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","release","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isAddedMovie","setIsAddedMovie","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","fetch","response","ok","Error","json","data","console","log","loadedMovieArray","push","message","method","body","JSON","stringify","headers","useEffect","content","length","MoviesList","newAdded","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab6edd29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__23StK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__3ZguP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__9QNwO\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\n\nimport Movie from \"./Movie\";\nimport classes from \"./MoviesList.module.css\";\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes[\"movies-list\"]}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.release}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from \"react\";\n\nimport classes from \"./AddMovie.module.css\";\n\nfunction AddMovie(props) {\n  const titleRef = useRef(\"\");\n  const openingTextRef = useRef(\"\");\n  const releaseDateRef = useRef(\"\");\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n    if (\n      !titleRef.current.value ||\n      !openingTextRef.current.value ||\n      !releaseDateRef.current.value\n    ) {\n      return;\n    }\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n\n    titleRef.current.value = \"\";\n    openingTextRef.current.value = \"\";\n    releaseDateRef.current.value = \"\";\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"opening-text\">Opening Text</label>\n        <textarea rows=\"5\" id=\"opening-text\" ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"date\">Release Date</label>\n        <input type=\"text\" id=\"date\" ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isAddedMovie, setIsAddedMovie] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://add-movies-214cf-default-rtdb.firebaseio.com/movieData.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedMovieArray = [];\n      for (const key in data) {\n        loadedMovieArray.push({\n          id: key,\n          title: data[key].title,\n          release: data[key].releaseDate,\n          openingText: data[key].openingText,\n        });\n      }\n\n      setMovies(loadedMovieArray);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    await fetch(\n      \"https://add-movies-214cf-default-rtdb.firebaseio.com/movieData.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n\n    setIsAddedMovie(true);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} newAdded={isAddedMovie} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}